{"version":3,"file":"component---src-templates-post-category-list-template-js-f56e19e2f1991c748326.js","mappings":"0KAGyC,IAEnCA,EAAwB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAgE3B,OAhE2BC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAC5BC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,MAChBC,EAAQH,EAAKI,kBAAkBC,OAC/B,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAAaP,KAAKC,MAAMO,YACjDC,EAA0B,IAAhBJ,EACVK,EAASL,IAAgBC,EACzBK,EACJN,EAAc,GAAM,EAAC,IACbE,EAAQ,QACRA,EAAQ,KAAIF,EAAc,GAC9BO,EAAQ,IAAOL,EAAQ,KAAIF,EAAc,GAE/C,OACEQ,EAAAA,cAACC,EAAAA,EAAM,KACJZ,EAAMa,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,OACEH,EAAAA,cAAA,WAASK,UAAU,OAAOC,IAAKF,EAAKG,OAAOC,MACxCJ,EAAKK,YAAYC,KAChBN,EAAKK,YAAYC,IAAIC,iBACrBP,EAAKK,YAAYC,IAAIC,gBAAgBC,OACnCZ,EAAAA,cAACa,EAAAA,GAAI,CACHC,GAAIV,EAAKG,OAAOC,KAChBH,UAAU,iBACVU,MAAO,CACLC,gBAAgB,OAAQZ,EAAKK,YAAYC,IAAIC,gBAAgBC,MAAMK,IAAG,OAI9EjB,EAAAA,cAAA,OAAKK,UAAU,gBACbL,EAAAA,cAAA,MAAIK,UAAU,cACZL,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIV,EAAKG,OAAOC,MAAOJ,EAAKK,YAAYS,QAEhDlB,EAAAA,cAAA,KAAGK,UAAU,2BAA2BD,EAAKe,SAC7CnB,EAAAA,cAAA,QAAMK,UAAU,aACbD,EAAKK,YAAYW,QAAQ,QAE5BpB,EAAAA,cAAA,QAAMK,UAAU,cACbD,EAAKiB,WAAW,iBAGb,IAIdrB,EAAAA,cAAA,OAAKK,UAAU,wBACbL,EAAAA,cAAA,OAAKK,UAAU,aAAaiB,KAAK,eAC7B1B,GACAI,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIhB,EAAUyB,IAAI,OAAOlB,UAAU,eAAc,qBAIzDL,EAAAA,cAAA,QAAMK,UAAU,eAAc,QACtBb,EAAY,OAAKC,IAEvBI,GACAG,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIf,EAAUwB,IAAI,OAAOlB,UAAU,eAAc,mBAQnE,EAAC1B,CAAA,CAhE2B,CAASqB,EAAAA,WAmEvC,W","sources":["webpack://flexible-gatsby/./src/templates/PostCategoryListTemplate.js"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\n\nclass BlogCategoryListTemplate extends React.Component {\n  render() {\n    const { data } = this.props\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages, basePath } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage =\n      currentPage - 1 === 1\n        ? `/${basePath}/`\n        : `/${basePath}/${currentPage - 1}`\n    const nextPage = `/${basePath}/${currentPage + 1}`\n\n    return (\n      <Layout>\n        {posts.map(({ node }) => {\n          return (\n            <article className=\"post\" key={node.fields.slug}>\n              {node.frontmatter.img &&\n                node.frontmatter.img.childImageSharp &&\n                node.frontmatter.img.childImageSharp.fluid && (\n                  <Link\n                    to={node.fields.slug}\n                    className=\"post-thumbnail\"\n                    style={{\n                      backgroundImage: `url(${node.frontmatter.img.childImageSharp.fluid.src})`,\n                    }}\n                  />\n                )}\n              <div className=\"post-content\">\n                <h2 className=\"post-title\">\n                  <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                </h2>\n                <p className=\"post-excerpt-multi-line\">{node.excerpt}</p>\n                <span className=\"post-date\">\n                  {node.frontmatter.updated}&nbsp;&nbsp;—&nbsp;\n                </span>\n                <span className=\"post-words\">\n                  {node.timeToRead} minute read\n                </span>\n              </div>\n            </article>\n          )\n        })}\n\n        <div className=\"pagination-container\">\n          <nav className=\"pagination\" role=\"pagination\">\n            {!isFirst && (\n              <Link to={prevPage} rel=\"prev\" className=\"newer-posts\">\n                ← Previous Page |\n              </Link>\n            )}\n            <span className=\"page-number\">\n              Page {currentPage} of {numPages}\n            </span>\n            {!isLast && (\n              <Link to={nextPage} rel=\"next\" className=\"older-posts\">\n                | Next Page →\n              </Link>\n            )}\n          </nav>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogCategoryListTemplate\n\nexport const pageQuery = graphql`\n  query blogCategoryPageQuery(\n    $skip: Int!\n    $limit: Int!\n    $mainCategory: String\n    $subCategory: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___created], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: {\n        frontmatter: {\n          category: { in: [$mainCategory] }\n          subCategory: { in: [$subCategory] }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            created(formatString: \"YYYY, MMM DD\")\n            updated(formatString: \"YYYY, MMM DD\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["BlogCategoryListTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","data","this","props","posts","allMarkdownRemark","edges","currentPage","numPages","basePath","pageContext","isFirst","isLast","prevPage","nextPage","React","Layout","map","_ref","node","className","key","fields","slug","frontmatter","img","childImageSharp","fluid","Link","to","style","backgroundImage","src","title","excerpt","updated","timeToRead","role","rel"],"sourceRoot":""}