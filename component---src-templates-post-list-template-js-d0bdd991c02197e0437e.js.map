{"version":3,"file":"component---src-templates-post-list-template-js-d0bdd991c02197e0437e.js","mappings":"0KAGyC,IAEnCA,EAAgB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KA4DnB,OA5DmBC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACpBC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,MAChBC,EAAQH,EAAKI,kBAAkBC,OAC/B,YAAEC,EAAW,SAAEC,GAAaN,KAAKC,MAAMM,YACvCC,EAA0B,IAAhBH,EACVI,EAASJ,IAAgBC,EACzBI,EAAWL,EAAc,GAAM,EAAC,SAAaA,EAAc,GAC3DM,EAAQ,KAAON,EAAc,GACnC,OACEO,EAAAA,cAACC,EAAAA,EAAM,KACJX,EAAMY,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,OACEH,EAAAA,cAAA,WAASK,UAAU,OAAOC,IAAKF,EAAKG,OAAOC,MACxCJ,EAAKK,YAAYC,KAChBN,EAAKK,YAAYC,IAAIC,iBACrBP,EAAKK,YAAYC,IAAIC,gBAAgBC,OACnCZ,EAAAA,cAACa,EAAAA,GAAI,CACHC,GAAIV,EAAKG,OAAOC,KAChBH,UAAU,iBACVU,MAAO,CACLC,gBAAgB,OAAQZ,EAAKK,YAAYC,IAAIC,gBAAgBC,MAAMK,IAAG,OAI9EjB,EAAAA,cAAA,OAAKK,UAAU,gBACbL,EAAAA,cAAA,MAAIK,UAAU,cACZL,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIV,EAAKG,OAAOC,MAAOJ,EAAKK,YAAYS,QAEhDlB,EAAAA,cAAA,KAAGK,UAAU,2BAA2BD,EAAKe,SAC7CnB,EAAAA,cAAA,QAAMK,UAAU,aACbD,EAAKK,YAAYW,QAAQ,QAE5BpB,EAAAA,cAAA,QAAMK,UAAU,cACbD,EAAKiB,WAAW,iBAGb,IAIdrB,EAAAA,cAAA,OAAKK,UAAU,wBACbL,EAAAA,cAAA,OAAKK,UAAU,aAAaiB,KAAK,eAC7B1B,GACAI,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIhB,EAAUyB,IAAI,OAAOlB,UAAU,eAAc,qBAIzDL,EAAAA,cAAA,QAAMK,UAAU,eAAc,QACtBZ,EAAY,OAAKC,IAEvBG,GACAG,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIf,EAAUwB,IAAI,OAAOlB,UAAU,eAAc,mBAQnE,EAACzB,CAAA,CA5DmB,CAASoB,EAAAA,WA+D/B,W","sources":["webpack://flexible-gatsby/./src/templates/PostListTemplate.js"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\n\nclass BlogListTemplate extends React.Component {\n  render() {\n    const { data } = this.props\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? `/` : `/${currentPage - 1}`\n    const nextPage = `/${currentPage + 1}`\n    return (\n      <Layout>\n        {posts.map(({ node }) => {\n          return (\n            <article className=\"post\" key={node.fields.slug}>\n              {node.frontmatter.img &&\n                node.frontmatter.img.childImageSharp &&\n                node.frontmatter.img.childImageSharp.fluid && (\n                  <Link\n                    to={node.fields.slug}\n                    className=\"post-thumbnail\"\n                    style={{\n                      backgroundImage: `url(${node.frontmatter.img.childImageSharp.fluid.src})`,\n                    }}\n                  />\n                )}\n              <div className=\"post-content\">\n                <h2 className=\"post-title\">\n                  <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                </h2>\n                <p className=\"post-excerpt-multi-line\">{node.excerpt}</p>\n                <span className=\"post-date\">\n                  {node.frontmatter.created}&nbsp;&nbsp;—&nbsp;\n                </span>\n                <span className=\"post-words\">\n                  {node.timeToRead} minute read\n                </span>\n              </div>\n            </article>\n          )\n        })}\n\n        <div className=\"pagination-container\">\n          <nav className=\"pagination\" role=\"pagination\">\n            {!isFirst && (\n              <Link to={prevPage} rel=\"prev\" className=\"newer-posts\">\n                ← Previous Page |\n              </Link>\n            )}\n            <span className=\"page-number\">\n              Page {currentPage} of {numPages}\n            </span>\n            {!isLast && (\n              <Link to={nextPage} rel=\"next\" className=\"older-posts\">\n                | Next Page →\n              </Link>\n            )}\n          </nav>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogListTemplate\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___created], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 160)\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            created(formatString: \"YYYY, MMM DD\")\n            updated(formatString: \"YYYY, MMM DD\")\n          }\n        }\n      }\n    }\n    categoryGroup: allMarkdownRemark(limit: 10) {\n      group(field: frontmatter___subCategory) {\n        category: fieldValue\n      }\n    }\n  }\n`\n"],"names":["BlogListTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","data","this","props","posts","allMarkdownRemark","edges","currentPage","numPages","pageContext","isFirst","isLast","prevPage","nextPage","React","Layout","map","_ref","node","className","key","fields","slug","frontmatter","img","childImageSharp","fluid","Link","to","style","backgroundImage","src","title","excerpt","created","timeToRead","role","rel"],"sourceRoot":""}