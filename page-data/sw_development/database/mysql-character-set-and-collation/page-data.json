{"componentChunkName":"component---src-templates-post-template-js","path":"/sw_development/database/mysql-character-set-and-collation/","result":{"data":{"site":{"siteMetadata":{"title":"Louis","author":"Louis"}},"markdownRemark":{"id":"597bfa9d-b519-5b66-99d8-01fc12bb8321","excerpt":"MySQL의 Character Set과 Collation을 설정하는 방법, 주로 사용하는 값에 대해서도 알아보자.","html":"<p>MySQL의 Character Set과 Collation을 설정하는 방법, 주로 사용하는 값에 대해서도 알아보자.</p>\n<!-- more -->\n<h1>개념</h1>\n<hr>\n<ul>\n<li>캐릭터셋 (Character Set; 문자 집합)\n<ul>\n<li>기호(symbol)와 인코딩의 집합이다.</li>\n<li>그래픽 문자(휴먼 언어와 같은)에 숫자를 할당하는 것을 캐릭터 인코딩(Character Encoding)이라고 한다.</li>\n<li>한 개의 캐릭터는 한 개의 숫자 값에 매핑되고, 맵핑된 다수의 값들은 집합이 되어 캐릭터셋(Character Set)이 된다.</li>\n</ul>\n</li>\n<li>정렬 (Collation; 비교 및 대조)\n<ul>\n<li>캐릭터셋의 캐릭터를 비교하기 위한 규칙의 집합이다.</li>\n</ul>\n</li>\n</ul>\n<h1>Character Set과 Collation 설정하기</h1>\n<hr>\n<h2>Character Set</h2>\n<ul>\n<li>주로 <code class=\"language-text\">utf8mb4</code> 사용한다.</li>\n<li>utf8mb3의 경우 이모지(emoji)는 깨질 수 있다.</li>\n</ul>\n<h2>Collation</h2>\n<ul>\n<li>주로 <code class=\"language-text\">utf8mb4_general_ci</code> 사용한다.</li>\n<li>utf8mb4_general_ci는 대소문자 구별없이 정렬하고 정렬 속도가 빠르다.\n<ul>\n<li>ci는 case-insensitive의 약자이고, 대소문자를 구분을 하지 않는 다는 것을 알 수 있다.</li>\n</ul>\n</li>\n<li>만일 대소문자 구별이 필요하다면 <code class=\"language-text\">utf8mb4_bin</code>를 사용한다. 하지만 bin() 함수를 대신 사용할 수도 있다.</li>\n<li>다국어 처리가 필요한 경우 <code class=\"language-text\">utf8mb4_unicode_ci</code>를 사용한다.</li>\n</ul>\n<h2>데이터베이스의 character set과 collation 확인하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SHOW</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">+</span><span class=\"token comment\">----------+---------------------------------+---------------------+--------+</span>\n<span class=\"token operator\">|</span> <span class=\"token keyword\">Charset</span>  <span class=\"token operator\">|</span> Description                     <span class=\"token operator\">|</span> <span class=\"token keyword\">Default</span> collation   <span class=\"token operator\">|</span> Maxlen <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------+---------------------------------+---------------------+--------+</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">|</span> utf8     <span class=\"token operator\">|</span> UTF<span class=\"token operator\">-</span><span class=\"token number\">8</span> Unicode                   <span class=\"token operator\">|</span> utf8_general_ci     <span class=\"token operator\">|</span>      <span class=\"token number\">3</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> utf8mb4  <span class=\"token operator\">|</span> UTF<span class=\"token operator\">-</span><span class=\"token number\">8</span> Unicode                   <span class=\"token operator\">|</span> utf8mb4_general_ci  <span class=\"token operator\">|</span>      <span class=\"token number\">4</span> <span class=\"token operator\">|</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<h2>(예제) 데이터베이스와 테이블 생성하기</h2>\n<p>character set과 collation은 데이터베이스, 테이블, 컬럼 정의할 때 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> d_foo <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> t_bar <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">type</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    description <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_unicode_ci\n    \n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci<span class=\"token punctuation\">;</span></code></pre></div>\n<h1>참고</h1>\n<hr>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Character_encoding\">https://en.wikipedia.org/wiki/Character_encoding</a></li>\n<li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/charset-general.html\">https://dev.mysql.com/doc/refman/8.0/en/charset-general.html</a></li>\n</ul>","fields":{"slug":"/sw_development/database/mysql-character-set-and-collation/"},"frontmatter":{"title":"MySQL 캐릭터셋 설정하기","searchTexts":["MySQL Character Set","MySQL Collation","How to set character set in mysql","How to set collation in mysql"],"category":"sw development","subCategory":"database","tags":["mysql","ddl"],"created":"Sep 18, 2022","updated":"Oct 15, 2022"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%85%90\">개념</a></p>\n</li>\n<li>\n<p><a href=\"#character-set%EA%B3%BC-collation-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\">Character Set과 Collation 설정하기</a></p>\n<ul>\n<li><a href=\"#character-set\">Character Set</a></li>\n<li><a href=\"#collation\">Collation</a></li>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%9D%98-character-set%EA%B3%BC-collation-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\">데이터베이스의 character set과 collation 확인하기</a></li>\n<li><a href=\"#%EC%98%88%EC%A0%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%99%80-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">(예제) 데이터베이스와 테이블 생성하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>"}},"pageContext":{"slug":"/sw_development/database/mysql-character-set-and-collation/","prev":{"fields":{"slug":"/sw_development/devops/aws-eks-ebs-csi-installation/"},"frontmatter":{"title":"AWS EKS 퍼시스턴트볼륨 사용하기","tags":["Kubernetes","K8S","AWS","EKS"],"category":"sw development","subCategory":"devops"}},"next":{"fields":{"slug":"/sw_development/devops/aws-eks-application-logging-04/"},"frontmatter":{"title":"AWS. EKS 애플리케이션 로그 수집하기 (4)","tags":["Kubernetes","K8S","OpenSearch","Logging","EKS","EFK"],"category":"sw development","subCategory":"devops"}}}},"staticQueryHashes":["2152785458","3427181268"]}