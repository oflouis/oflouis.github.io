{"componentChunkName":"component---src-templates-post-template-js","path":"/sw_development/spring-boot/resilience4j-feign-http-client/","result":{"data":{"site":{"siteMetadata":{"title":"Louis","author":"Louis"}},"markdownRemark":{"id":"724367fa-c682-519f-95f5-2e96dc64308d","excerpt":"개발을 하다보면 외부(External; Remote) 시스템의 HTTP API를 호출하는 경우가 생기곤 한다.\nspring boot에서 사용할 수 있는 다양한 REST(HTTP) Client가 존재하는데, 오늘은 resilience4j-feign을 사용하는 내용을 작성했다.\n또한 외부 시스템의 문제(장애)가 내 시스템으로 연쇄 전파되지 않도록 Circuit Breaker와 Rate Limiter로 장애 허용 설정도 함께 한다.","html":"<p>개발을 하다보면 외부(External; Remote) 시스템의 HTTP API를 호출하는 경우가 생기곤 한다.\nspring boot에서 사용할 수 있는 다양한 REST(HTTP) Client가 존재하는데, 오늘은 resilience4j-feign을 사용하는 내용을 작성했다.\n또한 외부 시스템의 문제(장애)가 내 시스템으로 연쇄 전파되지 않도록 Circuit Breaker와 Rate Limiter로 장애 허용 설정도 함께 한다.</p>\n<!-- more -->\n<h1>개요</h1>\n<hr>\n<h2>목표</h2>\n<ul>\n<li>외부 시스템의 HTTP API를 호출하기</li>\n<li>외부 시스템을 호출 개수 제한하기</li>\n<li>외부 시스템에 문제가 생겼을 때 차단하기</li>\n<li>HTTP Client Connection Pool 적용하기</li>\n</ul>\n<h2>구성요소</h2>\n<ul>\n<li>springboot2</li>\n<li>resilience4j-feign</li>\n<li>resilience4j RateLimiter, CircuitBreaker</li>\n<li>Okhttp3</li>\n</ul>\n<h1>짚고 갈 개념들</h1>\n<hr>\n<h2>Resilience4j</h2>\n<ul>\n<li>경량(lightweight)의 장애 허용(내결함성; fault tolerance) 라이브러리이다.</li>\n<li>Netflix Hystrix에서 영감을 받았고 java8과 함수형 프로그래밍을 위해 설계되었다.</li>\n<li>Vavr(java8+를 위한 함수형 라이브러리)만 사용하고 다른 외부 라이브러리 의존성은 없다.</li>\n<li>고수준의 기능들(데코레이터들)을 제공하고 필요한 기능만을 선택해서 사용할 수 있다.</li>\n</ul>\n<h2>Feign and OpenFeign</h2>\n<ul>\n<li>Java HTTP Client binder; REST client builder; Declarative Web Service Client</li>\n<li>java http clients 작성을 쉽게 만들어주는 것으로 interface를 생성하고 annotation을 추가하는 방식으로 사용한다.</li>\n<li>Netflix OSS(Open Source Service) 중 하나 였고, 현재는 OpenFeign 프로젝트로 완전히 이관되었다.</li>\n<li>Feign과 OpenFeign은 Spring Cloud에서 사용할 수 있다.\n<ul>\n<li>Netflix OSS 컴포넌트들은 <code class=\"language-text\">Spring Cloud Netflix</code> 프로젝트로 통합되어 제공된다.</li>\n<li>OpenFeign은 <code class=\"language-text\">Spring Cloud OpenFeign</code> 프로젝트로 통합되어 제공된다.</li>\n</ul>\n</li>\n<li>다른 REST Client로는 Retrofit, RestTemplate, WebClient 등이 있다.</li>\n</ul>\n<h2>Resilience4j Feign</h2>\n<ul>\n<li>Resilience4j의 애드온 모듈 중 하나이다.</li>\n<li>HystrixFeign과 유사하고 \"fault tolerance patterns\"을 위한 resilience4j의 기능을 데코레이션해서 사용할 수 있다.\n<ul>\n<li>현재 데코레이션 가능한 기능 : CircuitBreaker, RateLimiter, Fallback</li>\n</ul>\n</li>\n</ul>\n<h2>Okhttp</h2>\n<ul>\n<li>HTTP Client이고 Square에서 개발된 오픈소스 라이브러리이다.</li>\n<li>HTTP/2 지원(enables SPDY)하고 Connection Pooling, GZIP, 응답 캐싱 등을 제공한다. 또한 일반적인 네트워크의 연결 문제를 복구할 수도 있고, 최신 TLS를 지원한다.</li>\n<li>요청과 응답 API는 fluent builder와 immutability로 설계 되었고, 동기식과 비동기식을 지원한다.</li>\n<li>Okio 의존성만 있고, 라이브러리가 가볍다.</li>\n<li>다른 HTTP Client로는 JDK HttpClient(Java11 JEP 321, legacy HttpUrlConnection 교체), Apache HttpClient, Netty 등이 있다.</li>\n</ul>\n<h1>주요 설정</h1>\n<hr>\n<h2>의존성 설정</h2>\n<div class=\"gatsby-code-title gatsby-code-title-custom\">build.gradle</div>\n<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\">ext <span class=\"token punctuation\">{</span>\n    resilience4jVersion <span class=\"token operator\">=</span> <span class=\"token string\">'1.7.1'</span>\n    openfeignVersion <span class=\"token operator\">=</span> <span class=\"token string\">'11.10'</span>\n<span class=\"token punctuation\">}</span>\n\ndependencies <span class=\"token punctuation\">{</span>\n    implementation <span class=\"token string\">'org.springframework.boot:spring-boot-starter-actuator'</span>\n    implementation <span class=\"token string\">'org.springframework.boot:spring-boot-starter-aop'</span>\n    implementation <span class=\"token string\">'org.springframework.boot:spring-boot-starter-web'</span>\n    implementation <span class=\"token string gstring\">\"io.github.resilience4j:resilience4j-spring-boot2:<span class=\"token expression\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>resilience4jVersion<span class=\"token punctuation\">}</span></span>\"</span>\n    implementation <span class=\"token string gstring\">\"io.github.resilience4j:resilience4j-feign:<span class=\"token expression\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>resilience4jVersion<span class=\"token punctuation\">}</span></span>\"</span>\n    implementation <span class=\"token string gstring\">\"io.github.openfeign:feign-okhttp:<span class=\"token expression\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>openfeignVersion<span class=\"token punctuation\">}</span></span>\"</span>\n    implementation <span class=\"token string gstring\">\"io.github.openfeign:feign-jackson:<span class=\"token expression\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>openfeignVersion<span class=\"token punctuation\">}</span></span>\"</span>\n    <span class=\"token punctuation\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Okhttp3 Connection Pool 적용</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpClientConfig</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@Bean</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">OkHttpClient</span> <span class=\"token function\">okHttpClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OkHttpClient<span class=\"token punctuation\">.</span>Builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">connectionPool</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ConnectionPool</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>REST API 작성</h2>\n<ul>\n<li>외부 시스템은 httpbin을 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HttpBinAPI</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@RequestLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET /get\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token class-name\">GetResponse</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@RequestLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST /delay/{delay}\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token class-name\">GetResponse</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delay\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Integer</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@RequestLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PUT /status/{codes}\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token class-name\">String</span> <span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"codes\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Integer</span> codes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>REST Client와 Fault Tolerance 설정</h2>\n<ul>\n<li>설정 파일 작성 (circuit breaker와 rate limiter)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">resilience4j</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">circuitbreaker</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">instances</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">httpbin</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">sliding-window-type</span><span class=\"token punctuation\">:</span> COUNT_BASED <span class=\"token comment\"># COUNT_BASED(default) or TIME_BASED</span>\n        <span class=\"token key atrule\">sliding-window-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span> <span class=\"token comment\"># calls or seconds</span>\n        <span class=\"token key atrule\">minimum-number-of-calls</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span>\n        <span class=\"token key atrule\">failure-rate-threshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>\n        <span class=\"token key atrule\">wait-duration-in-open-state</span><span class=\"token punctuation\">:</span> 60s <span class=\"token comment\"># open -> half-open</span>\n        <span class=\"token key atrule\">permitted-number-of-calls-in-half-open-state</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token key atrule\">max-wait-duration-in-half-open-state</span><span class=\"token punctuation\">:</span> 0s <span class=\"token comment\"># half-open -> open</span>\n        <span class=\"token key atrule\">slow-call-rate-threshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span>\n        <span class=\"token key atrule\">slow-call-duration-threshold</span><span class=\"token punctuation\">:</span> 60s\n        <span class=\"token key atrule\">event-consumer-buffer-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n  <span class=\"token key atrule\">ratelimiter</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">instances</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">httpbin</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">timeout-duration</span><span class=\"token punctuation\">:</span> 5s\n        <span class=\"token key atrule\">limit-refresh-period</span><span class=\"token punctuation\">:</span> 500ns\n        <span class=\"token key atrule\">limit-for-period</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>\n        <span class=\"token key atrule\">event-consumer-buffer-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span></code></pre></div>\n<ul>\n<li>설정 내용 적용\n<ul>\n<li>YAML의 설정 정보를 사용하기 위해서는 CircuitBreakerRegistry와 RateLimiterRegistry를 사용한다.</li>\n<li>rate limiter, circuit breaker 기능은 FeignDecorators 생성 시 선언된 순서로 적용된다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> HTTP_BIN_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"httpbin\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> HTTP_BIN_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"https://httpbin.org:80/\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">HttpBinAPI</span> <span class=\"token function\">app2AppAPIClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token class-name\">CircuitBreaker</span> circuitBreaker <span class=\"token operator\">=</span> circuitBreakerRegistry<span class=\"token punctuation\">.</span><span class=\"token function\">circuitBreaker</span><span class=\"token punctuation\">(</span>HTTP_BIN_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  circuitBreaker<span class=\"token punctuation\">.</span><span class=\"token function\">getEventPublisher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onReset</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CircuitBreaker > onReset > {}\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onError</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CircuitBreaker > onError > {}\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onFailureRateExceeded</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CircuitBreaker > onSlowCallRateExceeded > {}\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onSlowCallRateExceeded</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CircuitBreaker > onSlowCallRateExceeded > {}\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onStateTransition</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CircuitBreaker > onStateTransition > {}\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token class-name\">RateLimiter</span> rateLimiter <span class=\"token operator\">=</span> rateLimiterRegistry<span class=\"token punctuation\">.</span><span class=\"token function\">rateLimiter</span><span class=\"token punctuation\">(</span>HTTP_BIN_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  rateLimiter<span class=\"token punctuation\">.</span><span class=\"token function\">getEventPublisher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onFailure</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RateLimiter > onFailure > {}\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token class-name\">FeignDecorators</span> feignDecorators <span class=\"token operator\">=</span> <span class=\"token class-name\">FeignDecorators</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">.</span><span class=\"token function\">withCircuitBreaker</span><span class=\"token punctuation\">(</span>circuitBreaker<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">.</span><span class=\"token function\">withRateLimiter</span><span class=\"token punctuation\">(</span>rateLimiter<span class=\"token punctuation\">)</span></span>      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token class-name\">Resilience4jFeign</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span>feignDecorators<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">client</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">feign<span class=\"token punctuation\">.</span>okhttp<span class=\"token punctuation\">.</span></span>OkHttpClient</span><span class=\"token punctuation\">(</span>okHttpClient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// HTTP Client 주입</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">decoder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">JacksonDecoder</span><span class=\"token punctuation\">(</span>objectMapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Json 설정 주입</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpBinAPI</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> HTTP_BIN_URL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Jackson2ObjectMapperBuilderCustomizer</span> <span class=\"token function\">jackson2ObjectMapperBuilderCustomizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> builder <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">featuresToDisable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeserializationFeature</span><span class=\"token punctuation\">.</span>FAIL_ON_UNKNOWN_PROPERTIES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">featuresToEnable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DeserializationFeature</span><span class=\"token punctuation\">.</span>ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">serializationInclusion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JsonInclude<span class=\"token punctuation\">.</span>Include</span><span class=\"token punctuation\">.</span>NON_NULL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">serializationInclusion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JsonInclude<span class=\"token punctuation\">.</span>Include</span><span class=\"token punctuation\">.</span>NON_EMPTY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">propertyNamingStrategy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PropertyNamingStrategies</span><span class=\"token punctuation\">.</span>LOWER_CAMEL_CASE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>테스트</h1>\n<hr>\n<h2>조건과 설정</h2>\n<ul>\n<li>CircuitBreaker와 RateLimiter 적용 테스트를 해보자.</li>\n<li>테스트를 위해 조금은 극단적으로 시나리오를 잡았고, 각 조건에 맞춰 설정을 수정하자.</li>\n<li>조건 #1 : 외부 시스템에 오류가 발생한 경우 요청을 중지한다.\n<ul>\n<li>10건의 요청을 기준으로 실패 비율이 50%로가 넘는 경우 circuit breaker를 오픈(OPEN)한다.</li>\n<li>하프 오픈(HALF-OPEN)전 10초를 대기한다. 하프 오픈 후에는 최대 5건의 요청만 허용한다.</li>\n<li>circuit breaker를 닫기 전에 1초 대기한다.</li>\n<li>외부 시스템의 응답이 느린 경우 오류로 판단한다. 지연으로 인지하는 응답 시간은 3초로 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># CircuitBreaker 설정</span>\n<span class=\"token key atrule\">sliding-window-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n<span class=\"token key atrule\">minimum-number-of-calls</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n<span class=\"token key atrule\">failure-rate-threshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>\n<span class=\"token key atrule\">wait-duration-in-open-state</span><span class=\"token punctuation\">:</span> 10s\n<span class=\"token key atrule\">permitted-number-of-calls-in-half-open-state</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n<span class=\"token key atrule\">max-wait-duration-in-half-open-state</span><span class=\"token punctuation\">:</span> 1s\n<span class=\"token key atrule\">slow-call-rate-threshold</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n<span class=\"token key atrule\">slow-call-duration-threshold</span><span class=\"token punctuation\">:</span> 3s</code></pre></div>\n</li>\n<li>조건 #2 : 외부 시스템에 초당 요청할 수 있는 개수는 정해져 있다.\n<ul>\n<li>제한된 수는 1초당 20건이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># RateLimiter 설정</span>\n<span class=\"token key atrule\">limit-refresh-period</span><span class=\"token punctuation\">:</span> 1s\n<span class=\"token key atrule\">limit-for-period</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n<span class=\"token key atrule\">timeout-duration</span><span class=\"token punctuation\">:</span> 10ms</code></pre></div>\n</li>\n</ul>\n<h2>테스트 API 작성</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/v1/test\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RestTestController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">HttpBinAPI</span> httpBinAPI<span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    httpBinAPI<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"success\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/delay\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    httpBinAPI<span class=\"token punctuation\">.</span><span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"delay\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/error\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    httpBinAPI<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"error\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>테스트하기</h2>\n<ul>\n<li>httpbin 구동하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">docker pull kennethreitz/httpbin\ndocker run -p <span class=\"token number\">80</span>:80 kennethreitz/httpbin</code></pre></div>\n<ul>\n<li>서버 실행하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> clone https://github.com/oflouis/resilience4j-feign.git\n<span class=\"token builtin class-name\">cd</span> resilience4j-feign\n./gradlew clean bootRun </code></pre></div>\n<ul>\n<li>조건 #1 : 외부 시스템 오류 테스트</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 서킷 브레이커 열기 위한 호출</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">1</span> <span class=\"token number\">4</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">curl</span> <span class=\"token string\">\"http://localhost:8080/v1/test/error\"</span><span class=\"token punctuation\">;</span> <span class=\"token function\">curl</span> <span class=\"token string\">\"http://localhost:8080/v1/test/error\"</span><span class=\"token punctuation\">;</span> <span class=\"token function\">curl</span> <span class=\"token string\">\"http://localhost:8080/v1/test/get\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># 주요 로그 확인</span>\n<span class=\"token comment\">## 오류 발생 시 실패로 기록</span>\nCircuitBreaker <span class=\"token string\">'httpbin'</span> recorded an exception as failure:\n<span class=\"token comment\">## 오류률 초과 시 서킷 브레이커 오픈 ( 상태 전환 : CLOSED to OPEN )</span>\nEvent FAILURE_RATE_EXCEEDED published: CircuitBreaker <span class=\"token string\">'httpbin'</span> exceeded failure rate threshold. Current failure rate: <span class=\"token number\">80.0</span>\nEvent STATE_TRANSITION published: CircuitBreaker <span class=\"token string\">'httpbin'</span> changed state from CLOSED to OPEN\n<span class=\"token comment\">## 서킷 브레이커 오픈된 경우 추가 요청 허용하지 않음 </span>\nEvent NOT_PERMITTED published: CircuitBreaker <span class=\"token string\">'httpbin'</span> recorded a call <span class=\"token function\">which</span> was not permitted.\nCircuitBreaker <span class=\"token string\">'httpbin'</span> is OPEN and does not permit further calls\n\n\n<span class=\"token comment\"># 서킷 브레이커 닫힘 확인을 위한 호출. 서킷 브레이커가 열린 후 10초 후에 실행</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">1</span> <span class=\"token number\">10</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">curl</span> <span class=\"token string\">\"http://localhost:8080/v1/test/get\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># 주요 로그 확인</span>\n<span class=\"token comment\">## 오픈 유지 시간 초과하고 서킷 브레이커 하프 오픈 ( 상태 전환 : OPEN to HALF_OPEN )</span>\nEvent STATE_TRANSITION published: CircuitBreaker <span class=\"token string\">'httpbin'</span> changed state from OPEN to HALF_OPEN\n<span class=\"token comment\">## 성공으로 기록되는 요청들</span>\nCircuitBreaker <span class=\"token string\">'httpbin'</span> succeeded:\nEvent SUCCESS published: CircuitBreaker <span class=\"token string\">'httpbin'</span> recorded a successful call. Elapsed time: <span class=\"token number\">36</span> ms\n<span class=\"token comment\">## 외부 시스템 정상으로 판단하고 서킷 브레이커 닫힘 ( 상태 전환 : HALF_OPEN to CLOSED )</span>\nEvent STATE_TRANSITION published: CircuitBreaker <span class=\"token string\">'httpbin'</span> changed state from HALF_OPEN to CLOSED</code></pre></div>\n<ul>\n<li>조건 #1 : 외부 시스템 지연 오류 테스트</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 지연 발생으로 서킷 브레이커 오픈하기 위한 호출</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">1</span> <span class=\"token number\">10</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">curl</span> <span class=\"token string\">\"http://localhost:8080/v1/test/delay\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># 주요 로그 확인</span>\n<span class=\"token comment\">## 지연은 있지만 성공으로 기록</span>\nCircuitBreaker <span class=\"token string\">'httpbin'</span> succeeded:\nEvent SUCCESS published: CircuitBreaker <span class=\"token string\">'httpbin'</span> recorded a successful call. Elapsed time: <span class=\"token number\">5054</span> ms\n<span class=\"token comment\">## 여러 차례의 지연으로 지연률 초과. 서킷 브레이커 오픈 ( 상태 전환 : CLOSED to OPEN )</span>\nEvent SLOW_CALL_RATE_EXCEEDED published: CircuitBreaker <span class=\"token string\">'httpbin'</span> exceeded slow call rate threshold. Current slow call rate: <span class=\"token number\">80.0</span>\nEvent STATE_TRANSITION published: CircuitBreaker <span class=\"token string\">'httpbin'</span> changed state from CLOSED to OPEN\n<span class=\"token comment\">## 서킷 브레이커 오픈된 경우 추가 요청 허용하지 않음</span>\nEvent NOT_PERMITTED published: CircuitBreaker <span class=\"token string\">'httpbin'</span> recorded a call <span class=\"token function\">which</span> was not permitted.</code></pre></div>\n<ul>\n<li>조건 #2 : 외부 시스템 호출 초과 제한 테스트</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 허용 개수 초과 후 추가 요청이 제한되는지 확인하기 위한 호출</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">seq</span> <span class=\"token number\">1</span> <span class=\"token number\">30</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">curl</span> <span class=\"token string\">\"http://localhost:8080/v1/test/get\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># 주요 로그 확인</span>\nServlet.service<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> servlet <span class=\"token punctuation\">[</span>dispatcherServlet<span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> context with path <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> threw exception <span class=\"token punctuation\">[</span>Request processing failed<span class=\"token punctuation\">;</span> nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter <span class=\"token string\">'httpbin'</span> does not permit further calls<span class=\"token punctuation\">]</span> with root cause\n\nio.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter <span class=\"token string\">'httpbin'</span> does not permit further calls\n\t<span class=\"token punctuation\">..</span>.</code></pre></div>\n<h1>전체 코드 확인하기</h1>\n<hr>\n<ul>\n<li><a href=\"https://github.com/oflouis/resilience4j-feign\">https://github.com/oflouis/resilience4j-feign</a></li>\n</ul>\n<h1>참고</h1>\n<hr>\n<ul>\n<li><a href=\"https://resilience4j.readme.io/docs\">https://resilience4j.readme.io/docs</a></li>\n<li><a href=\"https://github.com/OpenFeign/feign\">https://github.com/OpenFeign/feign</a></li>\n<li><a href=\"https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-feign.html\">https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-feign.html</a></li>\n<li><a href=\"https://www.baeldung.com/netflix-feign-vs-openfeign\">https://www.baeldung.com/netflix-feign-vs-openfeign</a></li>\n<li><a href=\"https://reflectoring.io/comparison-of-java-http-clients/\">https://reflectoring.io/comparison-of-java-http-clients/</a></li>\n<li><a href=\"https://stackoverflow.com/questions/42199614/jersey-rest-client-with-apache-http-client-4-5-vs-retrofit\">https://stackoverflow.com/questions/42199614/jersey-rest-client-with-apache-http-client-4-5-vs-retrofit</a></li>\n<li><a href=\"https://square.github.io/\">https://square.github.io/</a></li>\n<li><a href=\"https://github.com/square/okhttp/issues/3472\">https://github.com/square/okhttp/issues/3472</a></li>\n<li><a href=\"https://www.mocklab.io/blog/which-java-http-client-should-i-use-in-2020/\">https://www.mocklab.io/blog/which-java-http-client-should-i-use-in-2020/</a></li>\n<li><a href=\"https://square.github.io/okhttp/3.x/okhttp/okhttp3/OkHttpClient.html\">https://square.github.io/okhttp/3.x/okhttp/okhttp3/OkHttpClient.html</a></li>\n<li><a href=\"https://github.com/postmanlabs/httpbin\">https://github.com/postmanlabs/httpbin</a></li>\n<li><a href=\"https://stackoverflow.com/questions/5725430/http-test-server-accepting-get-post-requests\">https://stackoverflow.com/questions/5725430/http-test-server-accepting-get-post-requests</a></li>\n</ul>","fields":{"slug":"/sw_development/spring-boot/resilience4j-feign-http-client/"},"frontmatter":{"title":"resilience4j 사용해서 HTTP API 연동하기","searchTexts":["resilience4j-feign to use for rest client","java rest http client","장애 허용, 장애 전파 방지 적용하기","fault tolerance rate limiter circuit breaker","okhttp3 connection pool"],"category":"sw development","subCategory":"spring boot","tags":["spring boot","system design","msa"],"created":"Oct 30, 2022","updated":"Oct 30, 2022"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EA%B0%9C%EC%9A%94\">개요</a></p>\n<ul>\n<li><a href=\"#%EB%AA%A9%ED%91%9C\">목표</a></li>\n<li><a href=\"#%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\">구성요소</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A7%9A%EA%B3%A0-%EA%B0%88-%EA%B0%9C%EB%85%90%EB%93%A4\">짚고 갈 개념들</a></p>\n<ul>\n<li><a href=\"#resilience4j\">Resilience4j</a></li>\n<li><a href=\"#feign-and-openfeign\">Feign and OpenFeign</a></li>\n<li><a href=\"#resilience4j-feign\">Resilience4j Feign</a></li>\n<li><a href=\"#okhttp\">Okhttp</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A3%BC%EC%9A%94-%EC%84%A4%EC%A0%95\">주요 설정</a></p>\n<ul>\n<li><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%84%A4%EC%A0%95\">의존성 설정</a></li>\n<li><a href=\"#okhttp3-connection-pool-%EC%A0%81%EC%9A%A9\">Okhttp3 Connection Pool 적용</a></li>\n<li><a href=\"#rest-api-%EC%9E%91%EC%84%B1\">REST API 작성</a></li>\n<li><a href=\"#rest-client%EC%99%80-fault-tolerance-%EC%84%A4%EC%A0%95\">REST Client와 Fault Tolerance 설정</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\">테스트</a></p>\n<ul>\n<li><a href=\"#%EC%A1%B0%EA%B1%B4%EA%B3%BC-%EC%84%A4%EC%A0%95\">조건과 설정</a></li>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-api-%EC%9E%91%EC%84%B1\">테스트 API 작성</a></li>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EA%B8%B0\">테스트하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\">전체 코드 확인하기</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>"}},"pageContext":{"slug":"/sw_development/spring-boot/resilience4j-feign-http-client/","prev":{"fields":{"slug":"/sw_development/etc/openssl-cve-20221101/"},"frontmatter":{"title":"OpenSSL 보안 취약점 업데이트 권고 발표 ( CVE-2022-3602, CVE-2022-3786 )","tags":["Security"],"category":"sw development","subCategory":"etc"}},"next":{"fields":{"slug":"/sw_development/etc/google-domain-redirect-config/"},"frontmatter":{"title":"도메인 주소 변경하고 새주소로 리다이렉션하기","tags":["domain"],"category":"sw development","subCategory":"etc"}}}},"staticQueryHashes":["2152785458","3427181268"]}