{"componentChunkName":"component---src-templates-post-list-template-js","path":"/4","result":{"data":{"site":{"siteMetadata":{"title":"Louis"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"2022년 미국의 마지막 FOMC(12월 13일과 14일)가 있던 주에 머스크는 본인의 테슬라 주식 2200만 주를 팔았다. 공시는 나중에 나오겠지만 22년 3월 공시의 그의 지분율이 21.4%였으니 이제 약 15~16%일 것으로 추정된다.","fields":{"slug":"/life/economy/tesla-musk-elon-2022/"},"timeToRead":5,"frontmatter":{"title":"2022년 머스크의 테슬라 주식 매도 정리","created":"2022, Dec 17","updated":"2022, Dec 24"}}},{"node":{"excerpt":"애플리케이션은 대부분 CI로 컨테이너 이미지를 컨테이너 레지스트리로 업로드 하고 사용하게 된다. 예를 들면 CI(Github Actions, CircleCI 등)에서 이미지를 생성하고 AWS ECR에 이미지를 업로드하면 AWS EKS에서는 ECR에 업로드된 이미지를 사용할 수 있다. 그런데 AWS에서 동일한 컨테이너 이미지를 다수의 계정과 여러 리전에서 사용하고 서비스를 운영해야 한다면 어떻게 하는 것이 좋을까?","fields":{"slug":"/sw_development/devops/aws-ecr-replication-cross-account/"},"timeToRead":2,"frontmatter":{"title":"AWS. 다른 계정의 ECR 이미지 복제하기","created":"2022, Nov 16","updated":"2022, Nov 16"}}},{"node":{"excerpt":"AWS CDK를 사용해서 EKS를 관리하고 있는데, 노드 그룹 추가하면서 EKS 업데이트 오류가 발생했다. 현재 사용 중인 EKS 버전은 v23이다. 비용 최적화로 노드(EC2 인스턴스)를 많이 쓰기 어렵고, 네트워크 IP 관리로 IP도 작은 대역을 받아야 한다. 적은 리소스로 시작하고 증설하는 것을 고려해야 하니 IP 고갈 상황을 가정하고 서브넷과 노드를 추가하는 것을 테스트하다 발견하게 되었다.","fields":{"slug":"/sw_development/devops/aws-cdk-eks-v23-troubleshooting/"},"timeToRead":3,"frontmatter":{"title":"AWS. EKS CDK Troubleshooting - KubectlV23Layer","created":"2022, Nov 08","updated":"2022, Nov 08"}}},{"node":{"excerpt":"최근 OpenSSL에 치명적인 취약점이 발견되었다고 전 세계적인 보안 위기가 기사화 되고 있었다. 그리고 2022년 11월 1일, OpenSSL에서 취약점에 대한 업데이트와 권고 내용을 발표했다.","fields":{"slug":"/sw_development/etc/openssl-cve-20221101/"},"timeToRead":4,"frontmatter":{"title":"OpenSSL 보안 취약점 업데이트 권고 발표 ( CVE-2022-3602, CVE-2022-3786 )","created":"2022, Nov 04","updated":"2022, Nov 04"}}},{"node":{"excerpt":"개발을 하다보면 외부(External; Remote) 시스템의 HTTP API를 호출하는 경우가 생기곤 한다.\nspring boot에서 사용할 수 있는 다양한 REST(HTTP) Client가 존재하는데, 오늘은 resilience4j-feign을 사용하는 내용을 작성했다.\n또한 외부 시스템의 문제(장애)가 내 시스템으로 연쇄 전파되지 않도록 Circuit Breaker와 Rate Limiter로 장애 허용 설정도 함께 한다.","fields":{"slug":"/sw_development/spring-boot/resilience4j-feign-http-client/"},"timeToRead":8,"frontmatter":{"title":"resilience4j 사용해서 HTTP API 연동하기","created":"2022, Oct 30","updated":"2022, Oct 30"}}}]},"categoryGroup":{"group":[{"category":"blockchain"},{"category":"etc"},{"category":"react"},{"category":"setup"},{"category":"spring boot"},{"category":"troubleshooting"}]}},"pageContext":{"limit":5,"skip":15,"numPages":8,"currentPage":4}},"staticQueryHashes":["3427181268"]}