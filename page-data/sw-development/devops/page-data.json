{"componentChunkName":"component---src-templates-post-category-list-template-js","path":"/sw-development/devops/","result":{"data":{"site":{"siteMetadata":{"title":"Louis"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"아카마이 CDN을 사용한다면 사이트에 접속해서 퍼지 기능을 이용할 수 있다. 하지만 사이트 접속없이 개발 PC에서 즉시 처리하는 것이 빠르고 수월하다. 본 포스팅은 아카마이 CLI를 사용해서 캐시를 퍼지하는 방법을 이야기한다.\n본 포스팅은 맥에서의 설정과 사용을 다뤘는데, OS가 맥이 아닌 경우는 CLI 설치만 다르고 전체적인 맥락은 동일하기 때문에 다른 내용은 참고 링크를 확인하자.","fields":{"slug":"/sw_development/devops/cdn-akamai-cli-purge/"},"timeToRead":2,"frontmatter":{"title":"Akamai CLI 사용해서 Cache Purge 하기","created":"2022, Dec 24","updated":"2023, Jan 06"}}},{"node":{"excerpt":"애플리케이션은 대부분 CI로 컨테이너 이미지를 컨테이너 레지스트리로 업로드 하고 사용하게 된다. 예를 들면 CI(Github Actions, CircleCI 등)에서 이미지를 생성하고 AWS ECR에 이미지를 업로드하면 AWS EKS에서는 ECR에 업로드된 이미지를 사용할 수 있다. 그런데 AWS에서 동일한 컨테이너 이미지를 다수의 계정과 여러 리전에서 사용하고 서비스를 운영해야 한다면 어떻게 하는 것이 좋을까?","fields":{"slug":"/sw_development/devops/aws-ecr-replication-cross-account/"},"timeToRead":2,"frontmatter":{"title":"AWS. 다른 계정의 ECR 이미지 복제하기","created":"2022, Nov 16","updated":"2022, Nov 16"}}},{"node":{"excerpt":"AWS CDK를 사용해서 EKS를 관리하고 있는데, 노드 그룹 추가하면서 EKS 업데이트 오류가 발생했다. 현재 사용 중인 EKS 버전은 v23이다. 비용 최적화로 노드(EC2 인스턴스)를 많이 쓰기 어렵고, 네트워크 IP 관리로 IP도 작은 대역을 받아야 한다. 적은 리소스로 시작하고 증설하는 것을 고려해야 하니 IP 고갈 상황을 가정하고 서브넷과 노드를 추가하는 것을 테스트하다 발견하게 되었다.","fields":{"slug":"/sw_development/devops/aws-cdk-eks-v23-troubleshooting/"},"timeToRead":3,"frontmatter":{"title":"AWS. EKS CDK Troubleshooting - KubectlV23Layer","created":"2022, Nov 08","updated":"2022, Nov 08"}}},{"node":{"excerpt":"AWS EKS 모니터링을 위해 kube-prometheus-stack를 설치하면 기본적인 설정은 끝났다. 하지만 사람이 여러 대시보드를 주시하고 모니터링을 24시간 실시간으로 할 수 없기 때문에 주요 지표에 대해서 알람 설정을 해주는 것이 필수이다. 그라파나에 알람 설정을 추가하고 슬랙으로 전송해보자. 본 포스팅은 AWS EKS와 kube-prometheus-stack이 이미 설치된 상황을 가정하고 설명한다.","fields":{"slug":"/sw_development/devops/aws-eks-monitoring-grafana/"},"timeToRead":4,"frontmatter":{"title":"AWS. EKS 그라파나 알람 설정하기","created":"2022, Oct 10","updated":"2022, Dec 12"}}},{"node":{"excerpt":"AWS EKS 모니터링을 위해 kube-prometheus-stack을 설치했다. 그라파나는 다른 개발자들도 접속할 수 있도록 LB와 HTTPS 설정을 했고, 프로메테우스와 그라파나의 저장공간은 클러스터의 리소스를 사용하지 않게 AWS EBS 추가 설정을 했다. 본 포스팅은 AWS EKS가 이미 설치된 상황을 가정하고 설명한다.","fields":{"slug":"/sw_development/devops/aws-eks-monitoring-kube-prometheus-stack/"},"timeToRead":3,"frontmatter":{"title":"AWS. EKS 프로메테우스 그라파나 모니터링 구축하기","created":"2022, Oct 09","updated":"2022, Oct 15"}}}]}},"pageContext":{"limit":5,"skip":0,"numPages":3,"currentPage":1,"mainCategory":"sw development","subCategory":"devops","basePath":"sw-development/devops"}},"staticQueryHashes":["3427181268"]}