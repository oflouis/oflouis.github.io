{"version":3,"sources":["webpack://flexible-gatsby/./src/templates/PostCategoryListTemplate.js"],"names":["BlogCategoryListTemplate","render","posts","this","props","data","allMarkdownRemark","edges","pageContext","currentPage","numPages","basePath","console","dir","isFirst","isLast","prevPage","nextPage","map","node","className","key","fields","slug","frontmatter","img","childImageSharp","fluid","to","style","backgroundImage","src","title","excerpt","updated","timeToRead","role","rel","React"],"mappings":"0KAKMA,E,6FACJC,OAAA,WACE,IACMC,EADWC,KAAKC,MAAdC,KACWC,kBAAkBC,MACrC,EAA4CJ,KAAKC,MAAMI,YAA/CC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,SAC/BC,QAAQC,IAAR,gBAA4BJ,GAC5BG,QAAQC,IAAR,aAAyBH,GACzB,IAAMI,EAA0B,IAAhBL,EACVM,EAASN,IAAgBC,EACzBM,EACJP,EAAc,GAAM,EAApB,IACQE,EADR,QAEQA,EAFR,KAEoBF,EAAc,GAC9BQ,EAAQ,IAAON,EAAP,KAAmBF,EAAc,GAE/C,OACE,gBAAC,IAAD,KACGP,EAAMgB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,2BAASC,UAAU,OAAOC,IAAKF,EAAKG,OAAOC,MACxCJ,EAAKK,YAAYC,KAChBN,EAAKK,YAAYC,IAAIC,iBACrBP,EAAKK,YAAYC,IAAIC,gBAAgBC,OACnC,gBAAC,KAAD,CACEC,GAAIT,EAAKG,OAAOC,KAChBH,UAAU,iBACVS,MAAO,CACLC,gBAAgB,OAAQX,EAAKK,YAAYC,IAAIC,gBAAgBC,MAAMI,IAApD,OAIvB,uBAAKX,UAAU,gBACb,sBAAIA,UAAU,cACZ,gBAAC,KAAD,CAAMQ,GAAIT,EAAKG,OAAOC,MAAOJ,EAAKK,YAAYQ,QAEhD,yBAAIb,EAAKc,SACT,wBAAMb,UAAU,aACbD,EAAKK,YAAYU,QADpB,QAGA,wBAAMd,UAAU,cACbD,EAAKgB,WADR,qBAQR,uBAAKf,UAAU,wBACb,uBAAKA,UAAU,aAAagB,KAAK,cAC/B,2BACItB,GACA,yBACE,gBAAC,KAAD,CAAMc,GAAIZ,EAAUqB,IAAI,OAAOjB,UAAU,eAAzC,oBAKJ,yBACE,wBAAMA,UAAU,eAAhB,QACQX,EADR,OACyBC,KAGzBK,GACA,yBACE,gBAAC,KAAD,CAAMa,GAAIX,EAAUoB,IAAI,OAAOjB,UAAU,eAAzC,qB,GAhEqBkB,aA6EvC","file":"component---src-templates-post-category-list-template-js-81e7c71fc1fe0749c0ca.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\n\nclass BlogCategoryListTemplate extends React.Component {\n  render() {\n    const { data } = this.props\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages, basePath } = this.props.pageContext\n    console.dir(`currentPage: ${currentPage}`)\n    console.dir(`numPages: ${numPages}`)\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage =\n      currentPage - 1 === 1\n        ? `/${basePath}/`\n        : `/${basePath}/${currentPage - 1}`\n    const nextPage = `/${basePath}/${currentPage + 1}`\n\n    return (\n      <Layout>\n        {posts.map(({ node }) => {\n          return (\n            <article className=\"post\" key={node.fields.slug}>\n              {node.frontmatter.img &&\n                node.frontmatter.img.childImageSharp &&\n                node.frontmatter.img.childImageSharp.fluid && (\n                  <Link\n                    to={node.fields.slug}\n                    className=\"post-thumbnail\"\n                    style={{\n                      backgroundImage: `url(${node.frontmatter.img.childImageSharp.fluid.src})`,\n                    }}\n                  />\n                )}\n              <div className=\"post-content\">\n                <h2 className=\"post-title\">\n                  <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                </h2>\n                <p>{node.excerpt}</p>\n                <span className=\"post-date\">\n                  {node.frontmatter.updated}&nbsp;&nbsp;—&nbsp;\n                </span>\n                <span className=\"post-words\">\n                  {node.timeToRead} minute read\n                </span>\n              </div>\n            </article>\n          )\n        })}\n\n        <div className=\"pagination-container\">\n          <nav className=\"pagination\" role=\"pagination\">\n            <ul>\n              {!isFirst && (\n                <p>\n                  <Link to={prevPage} rel=\"prev\" className=\"newer-posts\">\n                    ← Previous Page\n                  </Link>\n                </p>\n              )}\n              <p>\n                <span className=\"page-number\">\n                  Page {currentPage} of {numPages}\n                </span>\n              </p>\n              {!isLast && (\n                <p>\n                  <Link to={nextPage} rel=\"next\" className=\"older-posts\">\n                    Next Page →\n                  </Link>\n                </p>\n              )}\n            </ul>\n          </nav>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogCategoryListTemplate\n\nexport const pageQuery = graphql`\n  query blogCategoryPageQuery(\n    $skip: Int!\n    $limit: Int!\n    $mainCategory: String\n    $subCategory: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___created], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: {\n        frontmatter: {\n          category: { in: [$mainCategory] }\n          subCategory: { in: [$subCategory] }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            created(formatString: \"YYYY, MMM DD\")\n            updated(formatString: \"YYYY, MMM DD\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}