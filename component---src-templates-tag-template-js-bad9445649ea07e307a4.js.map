{"version":3,"sources":["webpack://flexible-gatsby/./src/templates/TagTemplate.js"],"names":["pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","className","map","node","frontmatter","title","date","slug","fields","key","to"],"mappings":"+JAuCA,UAnCoB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC1BC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGf,OACE,gBAAC,IAAD,KACE,uBAAKK,UAAU,aACb,0BAAKD,GACL,2BACA,sBAAIC,UAAU,YACXH,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,EAAwBA,EAAKC,YAArBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACPC,EAASJ,EAAKK,OAAdD,KACR,OACE,2BACE,wBAAME,IAAKF,GACT,gBAAC,KAAD,CAAMG,GAAIH,GAAOF,GACjB,6BACE,mCAAqBC,UAOjC,4BACE,gBAAC,KAAD,CAAMI,GAAG,SAAT","file":"component---src-templates-tag-template-js-bad9445649ea07e307a4.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\n\nconst TagTemplate = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n  return (\n    <Layout>\n      <div className=\"blog-tags\">\n        <h1>{tagHeader}</h1>\n        <br />\n        <ul className=\"tag-list\">\n          {edges.map(({ node }) => {\n            const { title, date } = node.frontmatter\n            const { slug } = node.fields\n            return (\n              <div>\n                <span key={slug}>\n                  <Link to={slug}>{title}</Link>\n                  <small>\n                    <span>&nbsp;&nbsp;| {date}</span>\n                  </small>\n                </span>\n              </div>\n            )\n          })}\n        </ul>\n        <span>\n          <Link to=\"/tags\">‚Üê All tags</Link>\n        </span>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagTemplate\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}